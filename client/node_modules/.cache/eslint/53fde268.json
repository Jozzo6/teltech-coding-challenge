[{"/Users/josip/repo/Go/coding_challange/client/coding_challenge/src/main.ts":"1","/Users/josip/repo/Go/coding_challange/client/coding_challenge/src/App.vue":"2","/Users/josip/repo/Go/coding_challange/client/coding_challenge/src/services/http.ts":"3","/Users/josip/repo/Go/coding_challange/client/coding_challenge/src/components/SimpleCalculator.vue":"4","/Users/josip/repo/Go/coding_challange/client/coding_challenge/src/models/result.ts":"5"},{"size":267,"mtime":1651141940740,"results":"6","hashOfConfig":"7"},{"size":387,"mtime":1651135487868,"results":"8","hashOfConfig":"7"},{"size":407,"mtime":1651141168407,"results":"9","hashOfConfig":"7"},{"size":2675,"mtime":1651145907702,"results":"10","hashOfConfig":"7"},{"size":354,"mtime":1651127197335,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g9bluq",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/josip/repo/Go/coding_challange/client/coding_challenge/src/main.ts",[],"/Users/josip/repo/Go/coding_challange/client/coding_challenge/src/App.vue",[],[],"/Users/josip/repo/Go/coding_challange/client/coding_challenge/src/services/http.ts",[],"/Users/josip/repo/Go/coding_challange/client/coding_challenge/src/components/SimpleCalculator.vue",["25"],"<script lang=\"ts\" setup>\nimport { HttpService } from '../services/http'\nimport { ref } from 'vue'\nimport { Result } from '@/models/result'\n\nconst x = ref('')\nconst y = ref('')\nconst loading = ref(false)\nconst res = ref()\nconst operation = ref('')\nconst errorMessage = ref('')\nconst httpService = new HttpService()\n\nconst setOperation = (val: string) => {\n  operation.value = val\n}\n\nconst calculate = async () => {\n  loading.value = true\n  console.log(x.value)\n  const valX: number = parseFloat(x.value)\n  const valY: number = parseFloat(y.value)\n\n  console.log(valX)\n  console.log(valY)\n\n  if (isNaN(valX) || isNaN(valY)) {\n    errorMessage.value = 'Please make sure both values are numbers'\n    console.log('Nan?')\n    return\n  }\n  if (operation.value === '') {\n    return\n  }\n  try {\n    res.value = await httpService.getResult(operation.value, valX, valY)\n    console.log(res.value)\n  } catch (e) {\n    errorMessage.value = 'Something went wrong, please try again'\n  } finally {\n    loading.value = false\n  }\n}\n</script>\n\n<template>\n  <div class=\"container\">\n    <p class=\"Explanation\"></p>\n    <div class=\"input-container\">\n      <input v-model=\"x\" placeholder=\"X\" />\n      <input v-model=\"y\" placeholder=\"Y\" />\n    </div>\n    <div class=\"operations-container\">\n      <button class=\"button\" :class=\"{'selected': operation == 'add'}\" @click=\"setOperation('add')\">+</button>\n      <button class=\"button\" :class=\"{'selected': operation == 'subtract'}\" @click=\"setOperation('subtract')\">-</button>\n      <button class=\"button\" :class=\"{'selected': operation == 'divide'}\" @click=\"setOperation('divide')\">/</button>\n      <button class=\"button\" :class=\"{'selected': operation == 'multiply'}\" @click=\"setOperation('multiply')\">*</button>\n    </div>\n    <button @click=\"calculate()\"> Calculate </button>\n  </div>\n</template>\n\n<style>\n.container {\n  width: 100px;\n  height: 300px;\n  /* margin: auto; */\n  border-radius: 20px;\n  box-shadow: 0px 0px 5px 2px rgba(64, 62, 62, 0.2);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.container .input-container {\n  width: 50%;\n  margin: 20px auto;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n\n.input-container input {\n  width: 45px;\n  height: 45px;\n  text-align: center;\n  font-weight: 600;\n}\n\n.container .operations-container {\n  width: 70%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  margin: 20px auto;\n}\n\n.operations-container .button {\n  width: 45px;\n  height: 30px;\n  border-radius: 5px;\n  border: none;\n  font-weight: 700;\n  font-size: 1.1em;\n}\n\n.operations-container button .selected {\n  background: red;\n}\n\n</style>\n","/Users/josip/repo/Go/coding_challange/client/coding_challenge/src/models/result.ts",[],[],{"ruleId":"26","severity":1,"message":"27","line":4,"column":10,"nodeType":"28","messageId":"29","endLine":4,"endColumn":16},"@typescript-eslint/no-unused-vars","'Result' is defined but never used.","Identifier","unusedVar"]